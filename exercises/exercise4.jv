pipeline TemperatureDataipeline {


  block ZipExtractor oftype HttpExtractor {
    url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
  }

  block ZipInterpreter oftype ArchiveInterpreter {
    archiveType: "zip";
  }

  block TempDataPicker oftype FilePicker{
    path: "./data.csv";
  }

  block TemperatureCSV oftype TextFileInterpreter{}

  block Temperature_delimiter oftype CSVInterpreter {
    delimiter: ";";
  }

  block HeaderWriter oftype CellWriter {
    at: range A1:E1;
    write: [
        "id",
        "producer",
        "model",
        "month",
        "temperature"
    ];
  }

  block ColumnRename oftype CellWriter {
    at: cell J1; 
    write: ["battery_temperature"];
  }

  transform CtoF {
    from Celsius oftype decimal;
    to Fahrenheit oftype decimal;

    Fahrenheit: (Celsius * 9/5) + 32;
  }

  block TempTable oftype TableInterpreter {
   header: true;
   columns: [
     "id" oftype integer,
     "producer" oftype text,
     "model" oftype text,
     "month" oftype integer,
     "temperature" oftype decimal,
     "battery_temperature" oftype decimal
   ];
  }

  block CelsiusToFahrenheit oftype TableTransformer {
    inputColumns: ['temperature'];
    outputColumn: 'temperature';
    uses: CtoF;
  }

  block Battery_Temperature_transformation oftype TableTransformer {
    inputColumns: ['battery_temperature'];
    outputColumn: 'battery_temperature';
    uses: CtoF;
  }

  block DataTable oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
  }

  ZipExtractor
      -> ZipInterpreter
      -> TempDataPicker
      -> TemperatureCSV
      -> Temperature_delimiter
      -> HeaderWriter
      -> ColumnRename
      -> TempTable
      -> CelsiusToFahrenheit
      -> Battery_Temperature_transformation
      -> DataTable;
}